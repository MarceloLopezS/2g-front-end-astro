---
import Carousel from "./ui/Carousel.astro";

interface Props {
  id?: string;
  className?: string;
  direction: "to top" | "to bottom" | "to left" | "to right";
  trackOptions: {
    type: "linear" | "infinite";
    autoSlideDelay?: number; // In milliseconds
    maxItemsOnView?: number; // Integer
  };
}

const { id, className, direction, trackOptions } = Astro.props;
---

<Carousel
  id={id}
  className={className}
  direction={direction}
  trackOptions={trackOptions}
>
  <slot />
</Carousel>

<script>
  import { CAROUSELS } from "./config/DOMSelectors";
  import { getAllDomElements } from "../../utils/pure";
  import handleCarousel from "./model/handleCarousel";

  let carouselCleanUps;

  const handleAllCarousels = (carouselsSelector) => {
    let cleanUpFunctions = [];
    getAllDomElements(carouselsSelector).forEach((carousel) => {
      cleanUpFunctions.push(handleCarousel(carousel));
    });

    return cleanUpFunctions;
  };

  const resetCarousels = (carouselsSelector) => {
    return () => {
      carouselCleanUps.forEach((cleanUp) => {
        if (typeof cleanUp === "function") cleanUp();
      });
      carouselCleanUps = handleAllCarousels(carouselsSelector);
    };
  };

  carouselCleanUps = handleAllCarousels(CAROUSELS);
  const screenOrientation = window.screen.orientation;
  if (!screenOrientation) {
    // For Safari
    window.addEventListener("orientationchange", resetCarousels(CAROUSELS));
  } else {
    screenOrientation.addEventListener("change", resetCarousels(CAROUSELS));
  }
</script>
